{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/oscarwang/Projects/take_home/react_note_search/src/containers/Settings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { API } from \"aws-amplify\";\nimport { useHistory } from \"react-router-dom\";\nimport { Elements, StripeProvider } from \"react-stripe-elements\";\nimport BillingForm from \"../components/BillingForm\";\nimport { onError } from \"../libs/errorLib\";\nimport config from \"../config\";\nimport \"./Settings.css\";\nexport default function Settings() {\n  _s();\n\n  const history = useHistory();\n  const [stripe, setStripe] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setStripe(window.Stripe(config.STRIPE_KEY));\n  }, []);\n\n  function billUser(details) {\n    return API.post(\"notes\", \"/billing\", {\n      body: details\n    });\n  }\n\n  async function handleFormSubmit(storage, {\n    token,\n    error\n  }) {\n    if (error) {\n      onError(error);\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      await billUser({\n        storage,\n        source: token.id\n      });\n      alert(\"Your card has been charged successfully!\");\n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Settings\",\n    children: /*#__PURE__*/_jsxDEV(StripeProvider, {\n      stripe: stripe,\n      children: /*#__PURE__*/_jsxDEV(Elements, {\n        fonts: [{\n          cssSrc: \"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(BillingForm, {\n          isLoading: isLoading,\n          onSubmit: handleFormSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Settings, \"eART+0BLCjPSSNdvSkfFBVh78os=\", false, function () {\n  return [useHistory];\n});\n\n_c = Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/Users/oscarwang/Projects/take_home/react_note_search/src/containers/Settings.js"],"names":["React","useState","useEffect","API","useHistory","Elements","StripeProvider","BillingForm","onError","config","Settings","history","stripe","setStripe","isLoading","setIsLoading","window","Stripe","STRIPE_KEY","billUser","details","post","body","handleFormSubmit","storage","token","error","source","id","alert","push","e","cssSrc"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,uBAAzC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,gBAAP;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,SAAS,CAACG,MAAM,CAACC,MAAP,CAAcR,MAAM,CAACS,UAArB,CAAD,CAAT;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASC,QAAT,CAAkBC,OAAlB,EAA2B;AACzB,WAAOjB,GAAG,CAACkB,IAAJ,CAAS,OAAT,EAAkB,UAAlB,EAA8B;AACnCC,MAAAA,IAAI,EAAEF;AAD6B,KAA9B,CAAP;AAGD;;AAED,iBAAeG,gBAAf,CAAgCC,OAAhC,EAAyC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAzC,EAA2D;AACzD,QAAIA,KAAJ,EAAW;AACTlB,MAAAA,OAAO,CAACkB,KAAD,CAAP;AACA;AACD;;AAEDX,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,QAAI;AACF,YAAMI,QAAQ,CAAC;AACbK,QAAAA,OADa;AAEbG,QAAAA,MAAM,EAAEF,KAAK,CAACG;AAFD,OAAD,CAAd;AAKAC,MAAAA,KAAK,CAAC,0CAAD,CAAL;AACAlB,MAAAA,OAAO,CAACmB,IAAR,CAAa,GAAb;AACD,KARD,CAQE,OAAOC,CAAP,EAAU;AACVvB,MAAAA,OAAO,CAACuB,CAAD,CAAP;AACAhB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEH,MAAxB;AAAA,6BACE,QAAC,QAAD;AACE,QAAA,KAAK,EAAE,CACL;AACEoB,UAAAA,MAAM,EACJ;AAFJ,SADK,CADT;AAAA,+BAQE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAElB,SAAxB;AAAmC,UAAA,QAAQ,EAAES;AAA7C;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GArDuBb,Q;UACNN,U;;;KADMM,Q","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { API } from \"aws-amplify\";\nimport { useHistory } from \"react-router-dom\";\nimport { Elements, StripeProvider } from \"react-stripe-elements\";\nimport BillingForm from \"../components/BillingForm\";\nimport { onError } from \"../libs/errorLib\";\nimport config from \"../config\";\nimport \"./Settings.css\";\n\nexport default function Settings() {\n  const history = useHistory();\n  const [stripe, setStripe] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setStripe(window.Stripe(config.STRIPE_KEY));\n  }, []);\n\n  function billUser(details) {\n    return API.post(\"notes\", \"/billing\", {\n      body: details\n    });\n  }\n\n  async function handleFormSubmit(storage, { token, error }) {\n    if (error) {\n      onError(error);\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      await billUser({\n        storage,\n        source: token.id\n      });\n\n      alert(\"Your card has been charged successfully!\");\n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <div className=\"Settings\">\n      <StripeProvider stripe={stripe}>\n        <Elements\n          fonts={[\n            {\n              cssSrc:\n                \"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800\",\n            },\n          ]}\n        >\n          <BillingForm isLoading={isLoading} onSubmit={handleFormSubmit} />\n        </Elements>\n      </StripeProvider>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}